/*************************************
项目名称：星座运势--API
更新日期：2025-02-25
脚本作者：@Sheepfj
TG频道：https://t.me/sheep_007xiaoyang
GitHub：https://github.com/SheepFJ/QuantumultX
使用声明：⚠️仅供参考，🈲转载与售卖！
脚本说明：PKC微信API接口

============ Quantumult X ============

[rewrite_local]
^https:\/\/movies\.disney\.com\/sheep\/constellation\/([^\/]+)\/([^\/]+)\/ url script-response-body https://raw.githubusercontent.com/SheepFJ/QuantumultX/refs/heads/main/QuantumultX/API/constellation.js
[mitm]
hostname = movies.disney.com

*************************************/

function _0x2808(_0x203f04, _0x2596f0) { const _0x4949bc = _0x4030(); return _0x2808 = function (_0x11a62b, _0x6e6bb7) { _0x11a62b = _0x11a62b - 0x91; let _0x7a47cb = _0x4949bc[_0x11a62b]; return _0x7a47cb; }, _0x2808(_0x203f04, _0x2596f0); } const _0x3b5421 = _0x2808; (function (_0x140b2f, _0x5efcce) { const _0x39b529 = _0x2808, _0x51eb80 = _0x140b2f(); while (!![]) { try { const _0x282cd4 = -parseInt(_0x39b529(0xc1)) / 0x1 + parseInt(_0x39b529(0x9a)) / 0x2 + -parseInt(_0x39b529(0x97)) / 0x3 + -parseInt(_0x39b529(0xb9)) / 0x4 * (parseInt(_0x39b529(0xb1)) / 0x5) + parseInt(_0x39b529(0xae)) / 0x6 * (parseInt(_0x39b529(0xb8)) / 0x7) + parseInt(_0x39b529(0xb6)) / 0x8 + parseInt(_0x39b529(0xc7)) / 0x9; if (_0x282cd4 === _0x5efcce) break; else _0x51eb80['push'](_0x51eb80['shift']()); } catch (_0x588d49) { _0x51eb80['push'](_0x51eb80['shift']()); } } }(_0x4030, 0xbe19a)); const _0x47f3ab = (function () { let _0x3fc9cb = !![]; return function (_0x1147f4, _0x161eb6) { const _0x22c019 = _0x3fc9cb ? function () { const _0x328dcc = _0x2808; if (_0x161eb6) { const _0xeb419f = _0x161eb6[_0x328dcc(0xab)](_0x1147f4, arguments); return _0x161eb6 = null, _0xeb419f; } } : function () { }; return _0x3fc9cb = ![], _0x22c019; }; }()), _0x4d9ae0 = _0x47f3ab(this, function () { const _0x295e9b = _0x2808; return _0x4d9ae0['toString']()[_0x295e9b(0x9c)]('(((.+)+)+)+$')[_0x295e9b(0x92)]()['constructor'](_0x4d9ae0)[_0x295e9b(0x9c)](_0x295e9b(0xa3)); }); function _0x4030() { const _0x1c6fed = ['请求失败', '\x20明日运程：\x0a', 'keep-alive', 'trim', 'slice', 'forEach', 'apply', '\x20年运运程：\x0a', 'then', '6AaBuca', 'HTTP/1.1\x20200\x20OK', 'warn', '224800XeIBdj', 'return\x20(function()\x20', 'body', '日期格式不正确，支持的有：今日、本月、本周、年运、爱情、明日', '*/*', '2484224LhpiDY', '\x20本周运程：\x0a', '5447652RpmTEa', '12gkZjvQ', 'nianyun', 'content', '异常错误', '{}.constructor(\x22return\x20this\x22)(\x20)', 'gzip,\x20deflate', 'text/plain;\x20charset=utf-8', 'table', '1247627FMGSzp', 'trace', '\x20今日运程：\x0a', 'infos', 'HTTP/1.1\x20400\x20Bad\x20Request', 'POST', '4855671VyjjvU', 'zh-Hans-CN;q=1,\x20en-CN;q=0.9', 'info', 'HTTP/1.1\x20500\x20Internal\x20Server\x20Error', 'soninfos', '\x20本月运程：\x0a', 'benyue', 'application/x-www-form-urlencoded', 'toString', '\x20爱情运程：\x0a', 'error', 'jinri', 'constructor', '584751GlwsKJ', 'http://newos.glassmarket.cn/index.php?main_page=yunshi_api&channel=fortuneios', 'benzhou', '1455582dGroHz', 'channel=fortuneios&useridstr=a7079c01cfe44d9d8adb3ae8cc175330&version=9.5.1&xingzuoid=', 'search', 'Constellation/9.5.1\x20(iPhone;\x20iOS\x2016.4.1;\x20Scale/3.00)', 'title', 'bind', 'console', 'length', 'mingri', '(((.+)+)+)+$', 'newos.glassmarket.cn']; _0x4030 = function () { return _0x1c6fed; }; return _0x4030(); } _0x4d9ae0(); const _0x6e6bb7 = (function () { let _0x1f46d0 = !![]; return function (_0x189dda, _0x4608c4) { const _0x35fce5 = _0x1f46d0 ? function () { const _0x1f2ffe = _0x2808; if (_0x4608c4) { const _0x3eeba4 = _0x4608c4[_0x1f2ffe(0xab)](_0x189dda, arguments); return _0x4608c4 = null, _0x3eeba4; } } : function () { }; return _0x1f46d0 = ![], _0x35fce5; }; }()), _0x11a62b = _0x6e6bb7(this, function () { const _0x316e63 = _0x2808; let _0x25838a; try { const _0x24cfaa = Function(_0x316e63(0xb2) + _0x316e63(0xbd) + ');'); _0x25838a = _0x24cfaa(); } catch (_0x55f277) { _0x25838a = window; } const _0x231729 = _0x25838a[_0x316e63(0xa0)] = _0x25838a[_0x316e63(0xa0)] || {}, _0x17481e = ['log', _0x316e63(0xb0), _0x316e63(0xc9), _0x316e63(0x94), 'exception', _0x316e63(0xc0), _0x316e63(0xc2)]; for (let _0xb070d6 = 0x0; _0xb070d6 < _0x17481e[_0x316e63(0xa1)]; _0xb070d6++) { const _0x28809b = _0x6e6bb7[_0x316e63(0x96)]['prototype'][_0x316e63(0x9f)](_0x6e6bb7), _0x6d30ce = _0x17481e[_0xb070d6], _0x1034f1 = _0x231729[_0x6d30ce] || _0x28809b; _0x28809b['__proto__'] = _0x6e6bb7[_0x316e63(0x9f)](_0x6e6bb7), _0x28809b[_0x316e63(0x92)] = _0x1034f1['toString'][_0x316e63(0x9f)](_0x1034f1), _0x231729[_0x6d30ce] = _0x28809b; } }); _0x11a62b(); const urlPattern = /https:\/\/movies\.disney\.com\/sheep\/constellation\/([^\/]+)\/([^\/]+)\//, match = $request['url']['match'](urlPattern); if (match) { const encodedConstellation = match[0x1][_0x3b5421(0xa8)](), encodedDate = match[0x2]['trim'](), constellation = decodeURIComponent(encodedConstellation), date = decodeURIComponent(encodedDate), constellationMap = { '白羊座': 0x0, '金牛座': 0x1, '双子座': 0x2, '巨蟹座': 0x3, '狮子座': 0x4, '处女座': 0x5, '天秤座': 0x6, '天蝎座': 0x7, '射手座': 0x8, '摩羯座': 0x9, '水瓶座': 0xa, '双鱼座': 0xb }, xingzuoid = constellationMap[constellation]; if (xingzuoid !== undefined) { const url = _0x3b5421(0x98), method = _0x3b5421(0xc6), headers = { 'Accept-Encoding': _0x3b5421(0xbe), 'Accept': _0x3b5421(0xb5), 'Connection': _0x3b5421(0xa7), 'Content-Type': _0x3b5421(0x91), 'Host': _0x3b5421(0xa4), 'User-Agent': _0x3b5421(0x9d), 'Accept-Language': _0x3b5421(0xc8) }, body = _0x3b5421(0x9b) + xingzuoid, myRequest = { 'url': url, 'method': method, 'headers': headers, 'body': body }; $task['fetch'](myRequest)[_0x3b5421(0xad)](_0x4df99b => { const _0x28917a = _0x3b5421; try { const _0x1873d0 = JSON['parse'](_0x4df99b[_0x28917a(0xb3)]), _0x17c3e4 = _0x1873d0['infos'][_0x28917a(0x95)][_0x28917a(0xcb)], _0x5aa411 = _0x1873d0['infos'][_0x28917a(0xcd)][_0x28917a(0xcb)], _0x39b08b = _0x1873d0[_0x28917a(0xc4)][_0x28917a(0x99)][_0x28917a(0xcb)], _0x3c6be9 = _0x1873d0[_0x28917a(0xc4)][_0x28917a(0xba)][_0x28917a(0xcb)], _0x15dca2 = _0x1873d0[_0x28917a(0xc4)]['nianlove'][_0x28917a(0xcb)], _0x4c2950 = _0x1873d0[_0x28917a(0xc4)][_0x28917a(0xa2)][_0x28917a(0xcb)]; let _0x4844b9 = '', _0x8af79f = ''; if (date === '今日') _0x8af79f = '🌟', _0x4844b9 += _0x8af79f + _0x28917a(0xc3), _0x17c3e4[_0x28917a(0xa9)](0x0, -0x1)[_0x28917a(0xaa)](_0x28df27 => { const _0x16d803 = _0x28917a; _0x4844b9 += _0x8af79f + '\x20' + _0x28df27[_0x16d803(0x9e)] + '：' + _0x28df27[_0x16d803(0xbb)] + '\x0a'; }); else { if (date === '本月') _0x8af79f = '🌙', _0x4844b9 += _0x8af79f + _0x28917a(0xcc), _0x5aa411[_0x28917a(0xa9)](0x0, -0x1)[_0x28917a(0xaa)](_0xa0a4b1 => { const _0xdb7891 = _0x28917a; _0x4844b9 += _0x8af79f + '\x20' + _0xa0a4b1[_0xdb7891(0x9e)] + '：' + _0xa0a4b1[_0xdb7891(0xbb)] + '\x0a'; }); else { if (date === '本周') _0x8af79f = '✨', _0x4844b9 += _0x8af79f + _0x28917a(0xb7), _0x39b08b[_0x28917a(0xa9)](0x0, -0x1)['forEach'](_0x45a4f4 => { const _0x3230f7 = _0x28917a; _0x4844b9 += _0x8af79f + '\x20' + _0x45a4f4[_0x3230f7(0x9e)] + '：' + _0x45a4f4[_0x3230f7(0xbb)] + '\x0a'; }); else { if (date === '年运') _0x8af79f = '🌸', _0x4844b9 += _0x8af79f + _0x28917a(0xac), _0x3c6be9[_0x28917a(0xa9)](0x0, -0x1)[_0x28917a(0xaa)](_0x2628c1 => { const _0x1487f0 = _0x28917a; _0x4844b9 += _0x8af79f + '\x20' + _0x2628c1[_0x1487f0(0x9e)] + '：' + _0x2628c1[_0x1487f0(0xbb)] + '\x0a'; }); else { if (date === '爱情') _0x8af79f = '💖', _0x4844b9 += _0x8af79f + _0x28917a(0x93), _0x15dca2[_0x28917a(0xa9)](0x0, -0x1)[_0x28917a(0xaa)](_0x57e08f => { const _0x1576fd = _0x28917a; _0x4844b9 += _0x8af79f + '\x20' + _0x57e08f[_0x1576fd(0x9e)] + '：' + _0x57e08f[_0x1576fd(0xbb)] + '\x0a'; }); else date === '明日' ? (_0x8af79f = '🌅', _0x4844b9 += _0x8af79f + _0x28917a(0xa6), _0x4c2950['slice'](0x0, -0x1)[_0x28917a(0xaa)](_0x263312 => { const _0x1e20e9 = _0x28917a; _0x4844b9 += _0x8af79f + '\x20' + _0x263312[_0x1e20e9(0x9e)] + '：' + _0x263312[_0x1e20e9(0xbb)] + '\x0a'; })) : _0x4844b9 = _0x28917a(0xb4); } } } } $done({ 'status': _0x28917a(0xaf), 'headers': { 'Content-Type': _0x28917a(0xbf) }, 'body': _0x4844b9 }); } catch (_0x3a56d5) { $done({ 'status': 'HTTP/1.1\x20500\x20Internal\x20Server\x20Error', 'headers': { 'Content-Type': _0x28917a(0xbf) }, 'body': _0x28917a(0xbc) }); } }, _0x42072 => { const _0x2a4e09 = _0x3b5421; $done({ 'status': _0x2a4e09(0xca), 'headers': { 'Content-Type': _0x2a4e09(0xbf) }, 'body': _0x2a4e09(0xa5) }); }); } else $done({ 'status': _0x3b5421(0xc5), 'headers': { 'Content-Type': _0x3b5421(0xbf) }, 'body': '星座不对噢~记得带上--座' }); } else $done({ 'status': 'HTTP/1.1\x20400\x20Bad\x20Request', 'headers': { 'Content-Type': 'text/plain;\x20charset=utf-8' }, 'body': '请按如下格式询问\x20星座=白羊座/今日' });
