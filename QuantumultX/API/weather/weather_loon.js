/*************************************
项目名称：天气预报|PKC
更新日期：2025-03-28
脚本作者：@Sheepfj
使用声明：⚠️仅供参考，🈲转载与售卖！
TG频道：https://t.me/sheep_007xiaoyang
GitHub：https://github.com/SheepFJ/QuantumultX
脚本说明：用于PKC插件的天气接口
============ Quantumult X ============

[mitm]
hostname = api.sheep.com 

================ Loon ==================

[Script]
http-response ^https:\/\/api\.sheep\.com\/sheep\/weather\/([^\/]+)\/? script-path=https://raw.githubusercontent.com/SheepFJ/QuantumultX/refs/heads/main/QuantumultX/API/weather/weather_loon.js,requires-body=false,tag=近三日天气

*************************************/

const _0x489ad7 = _0x1e1e; function _0x5471() { const _0x1644e6 = ['398998utUJrL', '2869088Ntrbvg', '6240165bECULd', 'HTTP/1.1\x20200\x20OK', 'set', 'https://api.52vmy.cn/api/query/tian/three?city=', 'write', 'constructor', 'getDay', 'keep-alive', 'weather_data', 'data', '请求失败:\x20', '27tTLhCF', '🌟今日', 'weather', '58032pXjhDi', 'HTTP/1.1\x20400\x20Bad\x20Request', 'map', '3OIPBoy', '解析数据失败', 'HTTP/1.1\x20500\x20Internal\x20Server\x20Error', 'return\x20(function()\x20', 'error', '1746282DgesLU', 'search', 'code', 'https://api.52vmy.cn/doc/query/tian/three.html', '(((.+)+)+)+$', 'Mozilla/5.0\x20(iPhone;\x20CPU\x20iPhone\x20OS\x2018_3_1\x20like\x20Mac\x20OS\x20X)\x20AppleWebKit/605.1.15\x20(KHTML,\x20like\x20Gecko)\x20Version/18.3\x20Mobile/15E148\x20Safari/604.1', 'GET', '2858208mDkGzN', 'prototype', '{}.constructor(\x22return\x20this\x22)(\x20)', 'join', 'city', 'info', 'trace', 'document', 'valueForKey', '无效请求', 'length', '5752894NEgAlf', 'apply', 'u=0,\x20i', 'toString', 'match', 'console', 'exception', 'read', 'bearing', 'bind', '__proto__', '错误～地区示例:北京市朝阳区', 'warn', 'parse', 'text/plain;\x20charset=utf-8', 'then', 'undefined', 'PHPSESSID=evvviiglk2mkkoulb25i2f7799', 'same-origin', 'gzip,\x20deflate,\x20br', 'body', 'air_quality']; _0x5471 = function () { return _0x1644e6; }; return _0x5471(); } (function (_0xaa1201, _0x1f7bc8) { const _0x11a1f8 = _0x1e1e, _0x3349f4 = _0xaa1201(); while (!![]) { try { const _0x33f262 = parseInt(_0x11a1f8(0x95)) / 0x1 + -parseInt(_0x11a1f8(0x65)) / 0x2 + parseInt(_0x11a1f8(0x68)) / 0x3 * (-parseInt(_0x11a1f8(0x96)) / 0x4) + parseInt(_0x11a1f8(0x97)) / 0x5 + -parseInt(_0x11a1f8(0x6d)) / 0x6 + -parseInt(_0x11a1f8(0x7f)) / 0x7 + -parseInt(_0x11a1f8(0x74)) / 0x8 * (-parseInt(_0x11a1f8(0xa2)) / 0x9); if (_0x33f262 === _0x1f7bc8) break; else _0x3349f4['push'](_0x3349f4['shift']()); } catch (_0x591e98) { _0x3349f4['push'](_0x3349f4['shift']()); } } }(_0x5471, 0xd1e22)); const _0x10b125 = (function () { let _0x432360 = !![]; return function (_0x516b66, _0xbe8b73) { const _0x4a65a6 = _0x432360 ? function () { const _0x437be0 = _0x1e1e; if (_0xbe8b73) { const _0x337821 = _0xbe8b73[_0x437be0(0x80)](_0x516b66, arguments); return _0xbe8b73 = null, _0x337821; } } : function () { }; return _0x432360 = ![], _0x4a65a6; }; }()), _0x57ab59 = _0x10b125(this, function () { const _0x211e9a = _0x1e1e; return _0x57ab59[_0x211e9a(0x82)]()[_0x211e9a(0x6e)](_0x211e9a(0x71))[_0x211e9a(0x82)]()[_0x211e9a(0x9c)](_0x57ab59)[_0x211e9a(0x6e)](_0x211e9a(0x71)); }); _0x57ab59(); const _0x333f88 = (function () { let _0x5a1388 = !![]; return function (_0x385f5f, _0x5045ca) { const _0x5b32a2 = _0x5a1388 ? function () { if (_0x5045ca) { const _0x166eda = _0x5045ca['apply'](_0x385f5f, arguments); return _0x5045ca = null, _0x166eda; } } : function () { }; return _0x5a1388 = ![], _0x5b32a2; }; }()), _0x200ee3 = _0x333f88(this, function () { const _0x54c0e8 = _0x1e1e, _0x589714 = function () { const _0x1dd729 = _0x1e1e; let _0x1d0d6e; try { _0x1d0d6e = Function(_0x1dd729(0x6b) + _0x1dd729(0x76) + ');')(); } catch (_0xc03ab1) { _0x1d0d6e = window; } return _0x1d0d6e; }, _0x2daafb = _0x589714(), _0x85f874 = _0x2daafb[_0x54c0e8(0x84)] = _0x2daafb['console'] || {}, _0x36f58c = ['log', _0x54c0e8(0x8b), _0x54c0e8(0x79), 'error', _0x54c0e8(0x85), 'table', _0x54c0e8(0x7a)]; for (let _0x23e481 = 0x0; _0x23e481 < _0x36f58c[_0x54c0e8(0x7e)]; _0x23e481++) { const _0x217bee = _0x333f88['constructor'][_0x54c0e8(0x75)][_0x54c0e8(0x88)](_0x333f88), _0x385947 = _0x36f58c[_0x23e481], _0x222742 = _0x85f874[_0x385947] || _0x217bee; _0x217bee[_0x54c0e8(0x89)] = _0x333f88[_0x54c0e8(0x88)](_0x333f88), _0x217bee[_0x54c0e8(0x82)] = _0x222742[_0x54c0e8(0x82)][_0x54c0e8(0x88)](_0x222742), _0x85f874[_0x385947] = _0x217bee; } }); _0x200ee3(); function _0x1e1e(_0x24c4bf, _0x518dcf) { const _0x16c387 = _0x5471(); return _0x1e1e = function (_0x200ee3, _0x333f88) { _0x200ee3 = _0x200ee3 - 0x64; let _0x5d9b59 = _0x16c387[_0x200ee3]; return _0x5d9b59; }, _0x1e1e(_0x24c4bf, _0x518dcf); } const urlPattern = /^https:\/\/api\.sheep\.com\/sheep\/weather\/([^\/]+)\/?/, requestUrl = $request['url'], match = requestUrl[_0x489ad7(0x83)](urlPattern), isLoon = typeof $persistentStore !== _0x489ad7(0x8f), isQuanX = typeof $prefs !== _0x489ad7(0x8f), storage = { 'get': _0x5be0b3 => isLoon ? $persistentStore[_0x489ad7(0x86)](_0x5be0b3) : isQuanX ? $prefs[_0x489ad7(0x7c)](_0x5be0b3) : null, 'set': (_0x4e305a, _0x38c5d6) => isLoon ? $persistentStore[_0x489ad7(0x9b)](_0x38c5d6, _0x4e305a) : isQuanX ? $prefs['setValueForKey'](_0x38c5d6, _0x4e305a) : ![] }, getTodayLabel = () => { const _0x1fe44b = _0x489ad7, _0x3aa3c4 = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'], _0x4a8728 = new Date()[_0x1fe44b(0x9d)](); return _0x3aa3c4[_0x4a8728]; }; if (match) { const city = encodeURIComponent(match[0x1]), apiUrl = _0x489ad7(0x9a) + city, headers = { 'Sec-Fetch-Dest': _0x489ad7(0x7b), 'Connection': _0x489ad7(0x9e), 'Accept-Encoding': _0x489ad7(0x92), 'Priority': _0x489ad7(0x81), 'Sec-Fetch-Site': _0x489ad7(0x91), 'User-Agent': _0x489ad7(0x72), 'Sec-Fetch-Mode': 'navigate', 'Cookie': _0x489ad7(0x90), 'Referer': _0x489ad7(0x70), 'Host': 'api.52vmy.cn', 'Accept-Language': 'zh-CN,zh-Hans;q=0.9', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' }, myRequest = { 'url': apiUrl, 'method': _0x489ad7(0x73), 'headers': headers }; $task['fetch'](myRequest)[_0x489ad7(0x8e)](_0x21e7c5 => { const _0x24f672 = _0x489ad7; let _0x5b5eaa = _0x24f672(0x8a); try { const _0x15d4b3 = JSON[_0x24f672(0x8c)](_0x21e7c5[_0x24f672(0x93)]); if (_0x15d4b3[_0x24f672(0x6f)] === 0xc8 && _0x15d4b3['data'] && _0x15d4b3['data'][_0x24f672(0xa0)]) { const _0x278858 = _0x15d4b3['data'][_0x24f672(0x78)], _0x579687 = _0x15d4b3['data'][_0x24f672(0xa0)], _0x56008e = getTodayLabel(); _0x5b5eaa = _0x579687[_0x24f672(0x67)](_0x426b49 => { const _0x47c08c = _0x24f672; let _0xa405fc = _0x426b49['Time'] === _0x56008e ? _0x47c08c(0xa3) : _0x426b49['Time']; return _0xa405fc + '\x20' + _0x278858 + '\x20' + _0x426b49['temperature'] + '\x20' + _0x426b49[_0x47c08c(0x64)] + '\x20' + _0x426b49[_0x47c08c(0x87)] + '\x20' + _0x426b49[_0x47c08c(0x94)]; })[_0x24f672(0x77)]('\x0a'), storage[_0x24f672(0x99)](_0x24f672(0x9f), _0x5b5eaa); } } catch (_0x46b227) { _0x5b5eaa = _0x24f672(0x69); } $done({ 'status': _0x24f672(0x98), 'headers': { 'Content-Type': _0x24f672(0x8d) }, 'body': _0x5b5eaa }); }, _0x40b74b => { const _0x1324c7 = _0x489ad7; $done({ 'status': _0x1324c7(0x6a), 'headers': { 'Content-Type': _0x1324c7(0x8d) }, 'body': _0x1324c7(0xa1) + _0x40b74b[_0x1324c7(0x6c)] }); }); } else $done({ 'status': _0x489ad7(0x66), 'headers': { 'Content-Type': _0x489ad7(0x8d) }, 'body': _0x489ad7(0x7d) });