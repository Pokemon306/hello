const _0x3226c9 = _0x2b75; (function (_0x1daae8, _0xdc15a5) { const _0x2d28a2 = _0x2b75, _0x465a82 = _0x1daae8(); while (!![]) { try { const _0x2e8dbf = parseInt(_0x2d28a2(0xb3)) / 0x1 * (parseInt(_0x2d28a2(0xa3)) / 0x2) + parseInt(_0x2d28a2(0xa6)) / 0x3 * (parseInt(_0x2d28a2(0x9f)) / 0x4) + -parseInt(_0x2d28a2(0xb6)) / 0x5 * (parseInt(_0x2d28a2(0xad)) / 0x6) + -parseInt(_0x2d28a2(0xb4)) / 0x7 + parseInt(_0x2d28a2(0xb2)) / 0x8 + parseInt(_0x2d28a2(0xa0)) / 0x9 + -parseInt(_0x2d28a2(0x9e)) / 0xa; if (_0x2e8dbf === _0xdc15a5) break; else _0x465a82['push'](_0x465a82['shift']()); } catch (_0x11d6ca) { _0x465a82['push'](_0x465a82['shift']()); } } }(_0x1c77, 0x6e3ce)); const isLoon = typeof $persistentStore !== 'undefined', isQuanX = typeof $prefs !== _0x3226c9(0x9b), req = $request[_0x3226c9(0xa8)], match = req[_0x3226c9(0xa5)](/\/sheep\/bilibili\/video\/(.+?)\//); if (!match) sendResponse(0x190, _0x3226c9(0xa2)); else { const name = encodeURIComponent(match[0x1]), apiUrl = _0x3226c9(0x9a) + name + '&n=1', myRequest = { 'url': apiUrl, 'method': _0x3226c9(0xae), 'headers': { 'User-Agent': _0x3226c9(0xb1), 'Referer': _0x3226c9(0xb7), 'Accept': _0x3226c9(0xa1) } }; if (isLoon) $httpClient['get'](myRequest, function (_0x1495bd, _0x522124, _0x309fa3) { handleResponse(_0x1495bd, _0x309fa3); }); else isQuanX ? $task['fetch'](myRequest)[_0x3226c9(0xab)](_0x5cc940 => { handleResponse(null, _0x5cc940['body']); }, _0x49ff45 => { const _0x479a94 = _0x3226c9; handleResponse(_0x49ff45[_0x479a94(0xac)], null); }) : sendResponse(0x1f4, _0x3226c9(0xa4)); } function handleResponse(_0x3d1e26, _0x1aa289) { const _0x41d5b7 = _0x3226c9; if (_0x3d1e26) { console[_0x41d5b7(0xac)](_0x41d5b7(0x9d), _0x3d1e26), sendResponse(0x1f4, '请求失败'); return; } try { const _0x121039 = JSON[_0x41d5b7(0x98)](_0x1aa289); _0x121039 && _0x121039[_0x41d5b7(0xa8)] ? sendRedirect(_0x121039[_0x41d5b7(0xa8)]) : sendResponse(0x194, _0x41d5b7(0xaf)); } catch (_0x412239) { console['error'](_0x41d5b7(0x99), _0x412239), sendResponse(0x1f4, _0x41d5b7(0xb5)); } } function sendRedirect(_0xb2edc6) { const _0x338b0c = _0x3226c9, _0x55f293 = { 'status': _0x338b0c(0xb0), 'headers': { 'Location': _0xb2edc6, 'Content-Type': 'text/plain;\x20charset=utf-8' }, 'body': 'Redirecting\x20to\x20video...' }; if (isLoon) $done(_0x55f293); else isQuanX && $done(_0x55f293); } function _0x1c77() { const _0x4c52ca = ['then', 'error', '12lFlCOW', 'GET', '未找到视频地址', 'HTTP/1.1\x20302\x20Found', 'Mozilla/5.0\x20(iPhone;\x20CPU\x20iPhone\x20OS\x2018_3_1\x20like\x20Mac\x20OS\x20X)\x20AppleWebKit/605.1.15\x20(KHTML,\x20like\x20Gecko)\x20Version/18.3\x20Mobile/15E148\x20Safari/604.1', '1854816mTOeAs', '173soHueB', '2621654AcRTWg', '解析失败', '7160oyBQTr', 'https://api.52vmy.cn/doc/query/bilibili/video.html', 'parse', '解析响应失败:', 'https://api.52vmy.cn/api/query/bilibili/video?msg=', 'undefined', 'Internal\x20Server\x20Error', '请求失败:', '12729120gvesJV', '67884oAwtyR', '5972454PZSYFT', 'application/json', '请求格式错误', '9434PEVREn', '不支持的环境', 'match', '69ucEaVa', 'Bad\x20Request', 'url', 'Error', 'Not\x20Found']; _0x1c77 = function () { return _0x4c52ca; }; return _0x1c77(); } function sendResponse(_0x289823, _0x387f4c) { const _0x2e32fb = { 'status': 'HTTP/1.1\x20' + _0x289823 + '\x20' + getStatusText(_0x289823), 'headers': { 'Content-Type': 'text/plain;\x20charset=utf-8' }, 'body': _0x387f4c }; if (isLoon) $done(_0x2e32fb); else isQuanX && $done(_0x2e32fb); } function _0x2b75(_0x2bd5be, _0xf10db7) { const _0x1c7728 = _0x1c77(); return _0x2b75 = function (_0x2b75fa, _0x355043) { _0x2b75fa = _0x2b75fa - 0x98; let _0xb20140 = _0x1c7728[_0x2b75fa]; return _0xb20140; }, _0x2b75(_0x2bd5be, _0xf10db7); } function getStatusText(_0x54ccfb) { const _0x144b39 = _0x3226c9, _0x59f266 = { 0x190: _0x144b39(0xa7), 0x194: _0x144b39(0xaa), 0x1f4: _0x144b39(0x9c) }; return _0x59f266[_0x54ccfb] || _0x144b39(0xa9); }